{"version":3,"sources":["../../src/service/ReadDisbursementResponseService.js"],"names":["ReadDisbursementResponseService","constructor","disbursementResponseRepository","DisbursementResponseRepository","readAll","responses","results","Array","forEach","response","id","push","data"],"mappings":";;;;;;;AAAA;;;;AAEe,MAAMA,+BAAN,CAAsC;AACnDC,EAAAA,WAAW,GAAG;AACZ,SAAKC,8BAAL,GAAsC,IAAIC,uCAAJ,EAAtC;AACD;;AAEY,QAAPC,OAAO,GAAG;AACd,UAAMC,SAAS,GAAG,MAAM,KAAKH,8BAAL,CAAoCE,OAApC,EAAxB;AACA,UAAME,OAAO,GAAG,IAAIC,KAAJ,EAAhB;AAEAF,IAAAA,SAAS,CAACG,OAAV,CAAmBC,QAAD,IAAc;AAC9B,YAAMC,EAAE,GAAGD,QAAQ,CAACC,EAApB;AACAJ,MAAAA,OAAO,CAACK,IAAR,CAAa;AAAED,QAAAA,EAAF;AAAM,WAAGD,QAAQ,CAACG,IAAT;AAAT,OAAb;AACD,KAHD;AAKA,WAAON,OAAP;AACD;;AAfkD","sourcesContent":["import DisbursementResponseRepository from \"~src/repository/DisbursementResponseRepository\";\n\nexport default class ReadDisbursementResponseService {\n  constructor() {\n    this.disbursementResponseRepository = new DisbursementResponseRepository();\n  }\n\n  async readAll() {\n    const responses = await this.disbursementResponseRepository.readAll();\n    const results = new Array();\n\n    responses.forEach((response) => {\n      const id = response.id;\n      results.push({ id, ...response.data() });\n    });\n\n    return results;\n  }\n}\n"],"file":"ReadDisbursementResponseService.js"}