{"version":3,"sources":["../../src/controller/AuthController.js"],"names":["AuthController","constructor","readUserService","ReadUserService","responseFactory","ResponseFactory","login","reqBody","req","res","username","Auth","QUERY_USERNAME","password","QUERY_PASSWORD","user","readOneById","session","SESSION_KEY_USER_ID","User","ATTRIBUTE_ID","SESSION_KEY_USER_NAME","ATTRIBUTE_NAME","responseOk","responseNotFound","message","responseBadRequest"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,MAAMA,cAAN,CAAqB;AAClCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,eAAL,GAAuB,IAAIC,wBAAJ,EAAvB;AACA,SAAKC,eAAL,GAAuB,IAAIC,wBAAJ,EAAvB;AACD;;AAEU,QAALC,KAAK,CAACC,OAAD,EAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC7B,UAAMC,QAAQ,GAAGH,OAAO,CAACI,cAAKC,cAAN,CAAxB;AACA,UAAMC,QAAQ,GAAGN,OAAO,CAACI,cAAKG,cAAN,CAAxB;;AAEA,QAAIJ,QAAQ,IAAIG,QAAhB,EAA0B;AACxB,YAAME,IAAI,GAAG,MAAM,KAAKb,eAAL,CAAqBc,WAArB,CAAiCN,QAAjC,CAAnB;;AAEA,UAAIK,IAAJ,EAAU;AACRP,QAAAA,GAAG,CAACS,OAAJ,CAAYN,cAAKO,mBAAjB,IAAwCH,IAAI,CAACI,cAAKC,YAAN,CAA5C;AACAZ,QAAAA,GAAG,CAACS,OAAJ,CAAYN,cAAKU,qBAAjB,IAA0CN,IAAI,CAACI,cAAKG,cAAN,CAA9C;AAEA,eAAO,KAAKlB,eAAL,CAAqBmB,UAArB,CAAgCd,GAAhC,EAAqCM,IAArC,CAAP;AACD;;AAED,aAAO,KAAKX,eAAL,CAAqBoB,gBAArB,CAAsCf,GAAtC,EAA2C;AAChDgB,QAAAA,OAAO,EAAG,gBAAef,QAAS;AADc,OAA3C,CAAP;AAGD;;AAED,WAAO,KAAKN,eAAL,CAAqBsB,kBAArB,CAAwCjB,GAAxC,EAA6C;AAClDgB,MAAAA,OAAO,EAAE;AADyC,KAA7C,CAAP;AAGD;;AA5BiC","sourcesContent":["import Auth from \"~src/const/Auth\";\nimport User from \"~src/const/User\";\nimport ResponseFactory from \"~src/factory/ResponseFactory\";\nimport ReadUserService from \"~src/service/ReadUserService\";\n\nexport default class AuthController {\n  constructor() {\n    this.readUserService = new ReadUserService();\n    this.responseFactory = new ResponseFactory();\n  }\n\n  async login(reqBody, req, res) {\n    const username = reqBody[Auth.QUERY_USERNAME];\n    const password = reqBody[Auth.QUERY_PASSWORD];\n\n    if (username && password) {\n      const user = await this.readUserService.readOneById(username);\n\n      if (user) {\n        req.session[Auth.SESSION_KEY_USER_ID] = user[User.ATTRIBUTE_ID];\n        req.session[Auth.SESSION_KEY_USER_NAME] = user[User.ATTRIBUTE_NAME];\n\n        return this.responseFactory.responseOk(res, user);\n      }\n\n      return this.responseFactory.responseNotFound(res, {\n        message: `User with ID ${username} not found`,\n      });\n    }\n\n    return this.responseFactory.responseBadRequest(res, {\n      message: \"Username or Password not given\",\n    });\n  }\n}\n"],"file":"AuthController.js"}