{"version":3,"sources":["../../src/middleware/IsAuthenticated.js"],"names":["isAuthenticated","req","res","next","responseFactory","ResponseFactory","sessionUserId","session","Auth","SESSION_KEY_USER_ID","sessionUserName","SESSION_KEY_USER_NAME","responseUnauthorized","message"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,eAAeA,eAAf,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyCC,IAAzC,EAA+C;AACpD,QAAMC,eAAe,GAAG,IAAIC,wBAAJ,EAAxB;AAEA,QAAMC,aAAa,GAAGL,GAAG,CAACM,OAAJ,CAAYC,cAAKC,mBAAjB,CAAtB;AACA,QAAMC,eAAe,GAAGT,GAAG,CAACM,OAAJ,CAAYC,cAAKG,qBAAjB,CAAxB;AACA,QAAMX,eAAe,GAAGM,aAAa,IAAII,eAAzC;;AAEA,MAAIV,eAAJ,EAAqB;AACnB,WAAOG,IAAI,EAAX;AACD;;AAED,SAAOC,eAAe,CAACQ,oBAAhB,CAAqCV,GAArC,EAA0C;AAC/CW,IAAAA,OAAO,EAAE;AADsC,GAA1C,CAAP;AAGD","sourcesContent":["import Auth from \"~src/const/Auth\";\nimport ResponseFactory from \"~src/factory/ResponseFactory\";\n\nexport async function isAuthenticated(req, res, next) {\n  const responseFactory = new ResponseFactory();\n\n  const sessionUserId = req.session[Auth.SESSION_KEY_USER_ID];\n  const sessionUserName = req.session[Auth.SESSION_KEY_USER_NAME];\n  const isAuthenticated = sessionUserId && sessionUserName;\n\n  if (isAuthenticated) {\n    return next();\n  }\n\n  return responseFactory.responseUnauthorized(res, {\n    message: \"Please do login first\",\n  });\n}\n"],"file":"IsAuthenticated.js"}